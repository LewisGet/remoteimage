<?php
/**
 * @package     Joomla.Administrator
 * @subpackage  com_remoteimage
 *
 * @copyright   Copyright (C) 2012 Asikart. All rights reserved.
 * @license     GNU General Public License version 2 or later; see LICENSE.txt
 * @author      Generated by AKHelper - http://asikart.com
 */

// no direct access
defined('_JEXEC') or die;

include_once AKPATH_COMPONENT.'/modeladmin.php' ;

/**
 * Remoteimage model.
 */
class RemoteimageModelManager extends JModelLegacy
{
	/**
	 * @var		string	The prefix to use with controller messages.
	 * @since	1.6
	 */
	protected 	$text_prefix = 'COM_REMOTEIMAGE';
	
	public 		$component = 'remoteimage' ;
	public 		$item_name = 'manager' ;
	public 		$list_name = 'managers' ;
	
	
	/*
	 * function __construct
	 * @param 
	 */
	
	public function __construct($config = array())
	{
		$this->params 		= $params = JComponentHelper::getParams('com_remoteimage') ;
		$this->base_path 	= $params->get('Ftp_Path') ;
		$this->path 		= trim($this->base_path, '/') . '/' . trim(JRequest::getVar('path'), '/' );
		$this->ftp 			= RMHelper::getFTP();
		
		
		parent::__construct($config) ;
	}
	
	
	
	/*
	 * function get_children
	 * @param 
	 */
	
	public function getChildren()
	{
		$details = $this->ftp->listDetails($this->path, 'folders');
		
		$return = array();
		$root 	= JRequest::getVar('root') ;
		
		if($root) {
			
			$tmp = new JObject();
			$tmp->attr = new JObject();
			$tmp->attr->path 	= trim($this->path, '/') ;
			$tmp->attr->rel 	= 'drive' ;
			$tmp->attr->id 		= 'rmpath-root' ;
			
			$tmp->data 	= 'FTP' ;
			$tmp->state = 'closed' ;
			
			$return[] = $tmp ;
		}else{
			
			foreach( $details as $detail ):
				$tmp = new JObject();
				
				
				$tmp->attr 			= new JObject();
				$tmp->attr->path 	= trim($this->path, '/') . '/' . $detail['name'] ;
				$tmp->attr->rel 	= 'folder' ;
				$tmp->attr->id 		= 'rmpath-' . str_replace('/', '-', trim($tmp->attr->path, '/') ) ;
				
				$tmp->data 	= $detail['name'] ;
				$tmp->state = 'closed' ;
				
				$return[] = $tmp ;
			endforeach;
		}
		
		return $return;
	}
	
	
	
	/*
	 * function createNode
	 * @param 
	 */
	
	public function createNode()
	{
		$title = JRequest::getVar('title') ;
		$result = new JObject();
		
		if( $this->ftp->mkdir( trim($this->path, '/') . '/' . $title ) )
		{
			$result->status = 1 ;
			$result->path 	= trim($this->path, '/') . '/' . $title ;
		}else{
			$result->status = 0 ;
		}
		
		return $result ;
	}
	
	
	
	/*
	 * function removeNode
	 * @param 
	 */
	
	public function removeNode()
	{
		$result = new JObject();
		
		$lists = $this->ftp->listDetails($this->path);
		if($lists > 0) {
			$result->status = 0 ;
			$result->msg = JText::_('COM_REMOTEIMAGE_FTP_CANNOT_DELETE_FOLDER_WITH_CHILDREN') ;
			return $result ;
		}
		
		if( $this->ftp->delete( trim($this->path, '/') ) )
		{
			$result->status = 1 ;
		}else{
			$result->status = 0 ;
		}

		return $result ;
	}
	
	
	
	/*
	 * function moveNode
	 * @param 
	 */
	
	public function moveNode()
	{
		$result = new JObject();
		
		/*
		$lists = $this->ftp->listDetails($this->path);
		if($lists > 0) {
			$result->status = 0 ;
			$result->msg = JText::_('COM_REMOTEIMAGE_FTP_CANNOT_DELETE_FOLDER_WITH_CHILDREN') ;
			return $result ;
		}
		*/
		
		if( $this->ftp->delete( trim($this->path, '/') ) )
		{
			$result->status = 1 ;
		}else{
			$result->status = 0 ;
		}

		return $result ;
	}
}